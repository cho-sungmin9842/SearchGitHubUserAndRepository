// Generated by view binder compiler. Do not edit!
package fastcampus.part2.chapter4.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import fastcampus.part2.chapter4.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRepoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final ImageView forkCountImageView;

  @NonNull
  public final TextView forkCountTextView;

  @NonNull
  public final TextView repoNameTextView;

  @NonNull
  public final ImageView starCountImageView;

  @NonNull
  public final TextView starCountTextView;

  private ItemRepoBinding(@NonNull ConstraintLayout rootView, @NonNull TextView descriptionTextView,
      @NonNull ImageView forkCountImageView, @NonNull TextView forkCountTextView,
      @NonNull TextView repoNameTextView, @NonNull ImageView starCountImageView,
      @NonNull TextView starCountTextView) {
    this.rootView = rootView;
    this.descriptionTextView = descriptionTextView;
    this.forkCountImageView = forkCountImageView;
    this.forkCountTextView = forkCountTextView;
    this.repoNameTextView = repoNameTextView;
    this.starCountImageView = starCountImageView;
    this.starCountTextView = starCountTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRepoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRepoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_repo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRepoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.forkCountImageView;
      ImageView forkCountImageView = ViewBindings.findChildViewById(rootView, id);
      if (forkCountImageView == null) {
        break missingId;
      }

      id = R.id.forkCountTextView;
      TextView forkCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (forkCountTextView == null) {
        break missingId;
      }

      id = R.id.repoNameTextView;
      TextView repoNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (repoNameTextView == null) {
        break missingId;
      }

      id = R.id.starCountImageView;
      ImageView starCountImageView = ViewBindings.findChildViewById(rootView, id);
      if (starCountImageView == null) {
        break missingId;
      }

      id = R.id.starCountTextView;
      TextView starCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (starCountTextView == null) {
        break missingId;
      }

      return new ItemRepoBinding((ConstraintLayout) rootView, descriptionTextView,
          forkCountImageView, forkCountTextView, repoNameTextView, starCountImageView,
          starCountTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
